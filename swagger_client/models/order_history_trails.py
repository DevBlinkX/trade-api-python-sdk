# coding: utf-8

"""
    OpenAPI definition

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class OrderHistoryTrails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'symbol': 'Symbol',
        'ord_action': 'str',
        'pending_qty': 'float',
        'trigger_price': 'float',
        'limit_price': 'float',
        'avg_price': 'float',
        'dis_qty': 'float',
        'ord_id': 'str',
        'ord_desc': 'str',
        'ord_validity': 'str',
        'current_ord_status': 'str',
        'exc': 'str',
        'traded_qty': 'float',
        'rej_reason': 'str',
        'price': 'float',
        'qty': 'float',
        'prd_type': 'str',
        'exch_ord_id': 'str',
        'lupdate_date_time': 'str',
        'modified_by': 'str',
        'ord_type': 'str',
        'status': 'str'
    }

    attribute_map = {
        'symbol': 'symbol',
        'ord_action': 'ordAction',
        'pending_qty': 'pendingQty',
        'trigger_price': 'triggerPrice',
        'limit_price': 'limitPrice',
        'avg_price': 'avgPrice',
        'dis_qty': 'disQty',
        'ord_id': 'ordId',
        'ord_desc': 'ordDesc',
        'ord_validity': 'ordValidity',
        'current_ord_status': 'currentOrdStatus',
        'exc': 'exc',
        'traded_qty': 'tradedQty',
        'rej_reason': 'rejReason',
        'price': 'price',
        'qty': 'qty',
        'prd_type': 'prdType',
        'exch_ord_id': 'exchOrdId',
        'lupdate_date_time': 'lupdateDateTime',
        'modified_by': 'modifiedBy',
        'ord_type': 'ordType',
        'status': 'status'
    }

    def __init__(self, symbol=None, ord_action=None, pending_qty=None, trigger_price=None, limit_price=None,
                 avg_price=None, dis_qty=None, ord_id=None, ord_desc=None, ord_validity=None, current_ord_status=None,
                 exc=None, traded_qty=None, rej_reason=None, price=None, qty=None, prd_type=None, exch_ord_id=None,
                 lupdate_date_time=None, modified_by=None, ord_type=None, status=None):  # noqa: E501
        """OrderHistoryTrails - a model defined in Swagger"""  # noqa: E501
        self._symbol = None
        self._ord_action = None
        self._pending_qty = None
        self._trigger_price = None
        self._limit_price = None
        self._avg_price = None
        self._dis_qty = None
        self._ord_id = None
        self._ord_desc = None
        self._ord_validity = None
        self._current_ord_status = None
        self._exc = None
        self._traded_qty = None
        self._rej_reason = None
        self._price = None
        self._qty = None
        self._prd_type = None
        self._exch_ord_id = None
        self._lupdate_date_time = None
        self._modified_by = None
        self._ord_type = None
        self._status = None
        self.discriminator = None
        if symbol is not None:
            self.symbol = symbol
        if ord_action is not None:
            self.ord_action = ord_action
        if pending_qty is not None:
            self.pending_qty = pending_qty
        if trigger_price is not None:
            self.trigger_price = trigger_price
        if limit_price is not None:
            self.limit_price = limit_price
        if avg_price is not None:
            self.avg_price = avg_price
        if dis_qty is not None:
            self.dis_qty = dis_qty
        if ord_id is not None:
            self.ord_id = ord_id
        if ord_desc is not None:
            self.ord_desc = ord_desc
        if ord_validity is not None:
            self.ord_validity = ord_validity
        if current_ord_status is not None:
            self.current_ord_status = current_ord_status
        if exc is not None:
            self.exc = exc
        if traded_qty is not None:
            self.traded_qty = traded_qty
        if rej_reason is not None:
            self.rej_reason = rej_reason
        if price is not None:
            self.price = price
        if qty is not None:
            self.qty = qty
        if prd_type is not None:
            self.prd_type = prd_type
        if exch_ord_id is not None:
            self.exch_ord_id = exch_ord_id
        if lupdate_date_time is not None:
            self.lupdate_date_time = lupdate_date_time
        if modified_by is not None:
            self.modified_by = modified_by
        if ord_type is not None:
            self.ord_type = ord_type
        if status is not None:
            self.status = status

    @property
    def symbol(self):
        """Gets the symbol of this OrderHistoryTrails.  # noqa: E501


        :return: The symbol of this OrderHistoryTrails.  # noqa: E501
        :rtype: Symbol
        """
        return self._symbol

    @symbol.setter
    def symbol(self, symbol):
        """Sets the symbol of this OrderHistoryTrails.


        :param symbol: The symbol of this OrderHistoryTrails.  # noqa: E501
        :type: Symbol
        """

        self._symbol = symbol

    @property
    def ord_action(self):
        """Gets the ord_action of this OrderHistoryTrails.  # noqa: E501


        :return: The ord_action of this OrderHistoryTrails.  # noqa: E501
        :rtype: str
        """
        return self._ord_action

    @ord_action.setter
    def ord_action(self, ord_action):
        """Sets the ord_action of this OrderHistoryTrails.


        :param ord_action: The ord_action of this OrderHistoryTrails.  # noqa: E501
        :type: str
        """

        self._ord_action = ord_action

    @property
    def pending_qty(self):
        """Gets the pending_qty of this OrderHistoryTrails.  # noqa: E501


        :return: The pending_qty of this OrderHistoryTrails.  # noqa: E501
        :rtype: float
        """
        return self._pending_qty

    @pending_qty.setter
    def pending_qty(self, pending_qty):
        """Sets the pending_qty of this OrderHistoryTrails.


        :param pending_qty: The pending_qty of this OrderHistoryTrails.  # noqa: E501
        :type: float
        """

        self._pending_qty = pending_qty

    @property
    def trigger_price(self):
        """Gets the trigger_price of this OrderHistoryTrails.  # noqa: E501


        :return: The trigger_price of this OrderHistoryTrails.  # noqa: E501
        :rtype: float
        """
        return self._trigger_price

    @trigger_price.setter
    def trigger_price(self, trigger_price):
        """Sets the trigger_price of this OrderHistoryTrails.


        :param trigger_price: The trigger_price of this OrderHistoryTrails.  # noqa: E501
        :type: float
        """

        self._trigger_price = trigger_price

    @property
    def limit_price(self):
        """Gets the limit_price of this OrderHistoryTrails.  # noqa: E501


        :return: The limit_price of this OrderHistoryTrails.  # noqa: E501
        :rtype: float
        """
        return self._limit_price

    @limit_price.setter
    def limit_price(self, limit_price):
        """Sets the limit_price of this OrderHistoryTrails.


        :param limit_price: The limit_price of this OrderHistoryTrails.  # noqa: E501
        :type: float
        """

        self._limit_price = limit_price

    @property
    def avg_price(self):
        """Gets the avg_price of this OrderHistoryTrails.  # noqa: E501


        :return: The avg_price of this OrderHistoryTrails.  # noqa: E501
        :rtype: float
        """
        return self._avg_price

    @avg_price.setter
    def avg_price(self, avg_price):
        """Sets the avg_price of this OrderHistoryTrails.


        :param avg_price: The avg_price of this OrderHistoryTrails.  # noqa: E501
        :type: float
        """

        self._avg_price = avg_price

    @property
    def dis_qty(self):
        """Gets the dis_qty of this OrderHistoryTrails.  # noqa: E501


        :return: The dis_qty of this OrderHistoryTrails.  # noqa: E501
        :rtype: float
        """
        return self._dis_qty

    @dis_qty.setter
    def dis_qty(self, dis_qty):
        """Sets the dis_qty of this OrderHistoryTrails.


        :param dis_qty: The dis_qty of this OrderHistoryTrails.  # noqa: E501
        :type: float
        """

        self._dis_qty = dis_qty

    @property
    def ord_id(self):
        """Gets the ord_id of this OrderHistoryTrails.  # noqa: E501


        :return: The ord_id of this OrderHistoryTrails.  # noqa: E501
        :rtype: str
        """
        return self._ord_id

    @ord_id.setter
    def ord_id(self, ord_id):
        """Sets the ord_id of this OrderHistoryTrails.


        :param ord_id: The ord_id of this OrderHistoryTrails.  # noqa: E501
        :type: str
        """

        self._ord_id = ord_id

    @property
    def ord_desc(self):
        """Gets the ord_desc of this OrderHistoryTrails.  # noqa: E501


        :return: The ord_desc of this OrderHistoryTrails.  # noqa: E501
        :rtype: str
        """
        return self._ord_desc

    @ord_desc.setter
    def ord_desc(self, ord_desc):
        """Sets the ord_desc of this OrderHistoryTrails.


        :param ord_desc: The ord_desc of this OrderHistoryTrails.  # noqa: E501
        :type: str
        """

        self._ord_desc = ord_desc

    @property
    def ord_validity(self):
        """Gets the ord_validity of this OrderHistoryTrails.  # noqa: E501


        :return: The ord_validity of this OrderHistoryTrails.  # noqa: E501
        :rtype: str
        """
        return self._ord_validity

    @ord_validity.setter
    def ord_validity(self, ord_validity):
        """Sets the ord_validity of this OrderHistoryTrails.


        :param ord_validity: The ord_validity of this OrderHistoryTrails.  # noqa: E501
        :type: str
        """

        self._ord_validity = ord_validity

    @property
    def current_ord_status(self):
        """Gets the current_ord_status of this OrderHistoryTrails.  # noqa: E501


        :return: The current_ord_status of this OrderHistoryTrails.  # noqa: E501
        :rtype: str
        """
        return self._current_ord_status

    @current_ord_status.setter
    def current_ord_status(self, current_ord_status):
        """Sets the current_ord_status of this OrderHistoryTrails.


        :param current_ord_status: The current_ord_status of this OrderHistoryTrails.  # noqa: E501
        :type: str
        """

        self._current_ord_status = current_ord_status

    @property
    def exc(self):
        """Gets the exc of this OrderHistoryTrails.  # noqa: E501


        :return: The exc of this OrderHistoryTrails.  # noqa: E501
        :rtype: str
        """
        return self._exc

    @exc.setter
    def exc(self, exc):
        """Sets the exc of this OrderHistoryTrails.


        :param exc: The exc of this OrderHistoryTrails.  # noqa: E501
        :type: str
        """

        self._exc = exc

    @property
    def traded_qty(self):
        """Gets the traded_qty of this OrderHistoryTrails.  # noqa: E501


        :return: The traded_qty of this OrderHistoryTrails.  # noqa: E501
        :rtype: float
        """
        return self._traded_qty

    @traded_qty.setter
    def traded_qty(self, traded_qty):
        """Sets the traded_qty of this OrderHistoryTrails.


        :param traded_qty: The traded_qty of this OrderHistoryTrails.  # noqa: E501
        :type: float
        """

        self._traded_qty = traded_qty

    @property
    def rej_reason(self):
        """Gets the rej_reason of this OrderHistoryTrails.  # noqa: E501


        :return: The rej_reason of this OrderHistoryTrails.  # noqa: E501
        :rtype: str
        """
        return self._rej_reason

    @rej_reason.setter
    def rej_reason(self, rej_reason):
        """Sets the rej_reason of this OrderHistoryTrails.


        :param rej_reason: The rej_reason of this OrderHistoryTrails.  # noqa: E501
        :type: str
        """

        self._rej_reason = rej_reason

    @property
    def price(self):
        """Gets the price of this OrderHistoryTrails.  # noqa: E501


        :return: The price of this OrderHistoryTrails.  # noqa: E501
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this OrderHistoryTrails.


        :param price: The price of this OrderHistoryTrails.  # noqa: E501
        :type: float
        """

        self._price = price

    @property
    def qty(self):
        """Gets the qty of this OrderHistoryTrails.  # noqa: E501


        :return: The qty of this OrderHistoryTrails.  # noqa: E501
        :rtype: float
        """
        return self._qty

    @qty.setter
    def qty(self, qty):
        """Sets the qty of this OrderHistoryTrails.


        :param qty: The qty of this OrderHistoryTrails.  # noqa: E501
        :type: float
        """

        self._qty = qty

    @property
    def prd_type(self):
        """Gets the prd_type of this OrderHistoryTrails.  # noqa: E501


        :return: The prd_type of this OrderHistoryTrails.  # noqa: E501
        :rtype: str
        """
        return self._prd_type

    @prd_type.setter
    def prd_type(self, prd_type):
        """Sets the prd_type of this OrderHistoryTrails.


        :param prd_type: The prd_type of this OrderHistoryTrails.  # noqa: E501
        :type: str
        """

        self._prd_type = prd_type

    @property
    def exch_ord_id(self):
        """Gets the exch_ord_id of this OrderHistoryTrails.  # noqa: E501


        :return: The exch_ord_id of this OrderHistoryTrails.  # noqa: E501
        :rtype: str
        """
        return self._exch_ord_id

    @exch_ord_id.setter
    def exch_ord_id(self, exch_ord_id):
        """Sets the exch_ord_id of this OrderHistoryTrails.


        :param exch_ord_id: The exch_ord_id of this OrderHistoryTrails.  # noqa: E501
        :type: str
        """

        self._exch_ord_id = exch_ord_id

    @property
    def lupdate_date_time(self):
        """Gets the lupdate_date_time of this OrderHistoryTrails.  # noqa: E501


        :return: The lupdate_date_time of this OrderHistoryTrails.  # noqa: E501
        :rtype: str
        """
        return self._lupdate_date_time

    @lupdate_date_time.setter
    def lupdate_date_time(self, lupdate_date_time):
        """Sets the lupdate_date_time of this OrderHistoryTrails.


        :param lupdate_date_time: The lupdate_date_time of this OrderHistoryTrails.  # noqa: E501
        :type: str
        """

        self._lupdate_date_time = lupdate_date_time

    @property
    def modified_by(self):
        """Gets the modified_by of this OrderHistoryTrails.  # noqa: E501


        :return: The modified_by of this OrderHistoryTrails.  # noqa: E501
        :rtype: str
        """
        return self._modified_by

    @modified_by.setter
    def modified_by(self, modified_by):
        """Sets the modified_by of this OrderHistoryTrails.


        :param modified_by: The modified_by of this OrderHistoryTrails.  # noqa: E501
        :type: str
        """

        self._modified_by = modified_by

    @property
    def ord_type(self):
        """Gets the ord_type of this OrderHistoryTrails.  # noqa: E501


        :return: The ord_type of this OrderHistoryTrails.  # noqa: E501
        :rtype: str
        """
        return self._ord_type

    @ord_type.setter
    def ord_type(self, ord_type):
        """Sets the ord_type of this OrderHistoryTrails.


        :param ord_type: The ord_type of this OrderHistoryTrails.  # noqa: E501
        :type: str
        """

        self._ord_type = ord_type

    @property
    def status(self):
        """Gets the status of this OrderHistoryTrails.  # noqa: E501


        :return: The status of this OrderHistoryTrails.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this OrderHistoryTrails.


        :param status: The status of this OrderHistoryTrails.  # noqa: E501
        :type: str
        """

        self._status = status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(OrderHistoryTrails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrderHistoryTrails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
